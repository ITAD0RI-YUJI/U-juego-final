@startuml clasesII
!define Sprite pygame.sprite.Sprite
!define ABC abc.ABC
!define abstractmethod abc.abstractmethod

class Dad {
    -- Atributos --
    - int vida
    - list images_animation
    - int current_image
    - Surface personaje_imagen
    - Rect rect
    - int animation_time
    - int last_update
    - int contador
    - list bats_array
    
    -- Métodos --
    + __init__(self, animation, animation_time, pet)
    + abstract animacion(self)
    + abstract draw(self, screen)
}

class Bat {
    -- Atributos --
    - int velocidad_x
    - Sound audio
    
    -- Métodos --
    + __init__(self, vida, animation, animation_time, pet)
    + animacion(self)
    + draw(self, screen)
    + mover(self)
    + add_array(self, array, pet)
    + appear(self, screen, array)
    + delete(self, delete_bat)
}

class Gusano {
    -- Atributos --
    - int velocidad_x
    - int mitad
    - Sound audio
    
    -- Métodos --
    + __init__(self, vida, animation, animation_time, pet)
    + animacion(self)
    + draw(self, screen)
    + mover(self)
    + add_array(self, array, pet)
    + appear(self, screen, array)
    + delete(self, delete_bat)
}

class Main_character {
    -- Atributos --
    - bool final
    - int vida
    - int velocidad
    - Surface quieto
    - Rect rect
    - Surface perdedor
    - Rect rectp
    - Surface ganador
    - Rect rectg
    - bool especialx
    - bool direction_right
    - bool direction_left
    - bool ataquez
    - bool salto
    - bool parar
    - bool parar2
    - int cuenta_especial
    - int cuenta_ataques
    - int cuenta_salto
    - int cuenta_pasos
    - int px
    - int py
    - int ancho
    - int cantidad_enemigos_muertos
    - int anim_speed
    - Sound luffy_sound
    - Sound luffy_sound_ganar
    - Sound luffy_sound_perder
    - Sound totoro_sound
    - Group disparos
    - Group especial
    - int cooldown_total
    - int cooldown_timer
    
    -- Métodos --
    + __init__(self)
    + movimiento(self)
    + update_disparos(self, bicho_array, bicho)
    + update_especial(self, bichos_array, bicho, enemy, array_vidas)
    + dibujar(self)
    + colision(self, objeto_chocando_arreglo, array_vidas)
}

class Sombrero {
    -- Atributos --
    - Surface vida_image
    - Rect rect
    - list hat_array
    
    -- Métodos --
    + __init__(self, array)
    + vidas_array_add(self)
    + dibujar_vidas(self)
}

class Disparo {
    -- Atributos --
    - int velocidad
    
    -- Métodos --
    + __init__(self, px, py)
    + update(self)
}

class Especial {
    -- Atributos --
    - int velocidad
    
    -- Métodos --
    + __init__(self, px, py)
    + update(self)
}

class Enemy {
    -- Atributos --
    - int vidas
    - list array_vidas
    - Surface vida_image
    - Rect rect_vida_image
    
    -- Métodos --
    + __init__(self, vida, animation, animation_time, pet, array_vidas)
    + animacion(self)
    + draw(self, screen)
    + vidas_array_add(self)
    + dibujar_vidas(self)
}

class Main{
    -- Atributos --
    - bool running

    -- Metodos --
    + __init__(self)
    + ejecutar(self)
}

Dad <|-- Bat
Dad <|-- Gusano
Dad <|-- Enemy
Dad ..> ABC : implements
Dad ..> Sprite : extends
Main_character o-- Sombrero
Main_character o-- Disparo
Main_character o-- Especial
Sprite <|-- Main_character
Sprite <|-- Disparo
Sprite <|-- Especial

Main *-- Enemy
Main *-- Main_character
Main *-- Gusano
Main *-- Bat


@enduml
